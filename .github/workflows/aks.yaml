name: AKS

on:
  pull_request: {}
  push:
    branches:
      - master
  schedule:
    - cron:  '0 */6 * * *'

env:
  clusterName: cilium-cli-ci-${{ github.run_number }}

jobs:
  installation-and-connectivity:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI info
        uses: azure/CLI@v1
        with:
          azcliversion: 2.0.72
          inlineScript: |
            az account show

      - name: Create AKS cluster
        run: |
          az aks create \
            --resource-group cilium-ci \
            --name ${{ env.clusterName }} \
            --location westeurope \
            --node-count 2 \
            --network-plugin azure \
            --generate-ssh-keys

      - name: Set job vars
        id: vars
        run: |
          if [ ${{ github.event.issue.pull_request || github.event.pull_request }} ]; then
            PR_API_JSON=$(curl \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              ${{ github.event.issue.pull_request.url || github.event.pull_request.url }})
            SHA=$(echo "$PR_API_JSON" | jq -r ".head.sha")
            OWNER=$(echo "$PR_API_JSON" | jq -r ".number")
            IS_PR=true
          else
            SHA=${{ github.sha }}
            OWNER=${{ github.sha }}
          fi
          echo ::set-output name=sha::${SHA}

      - name: Get Credentials
        run: |
          az aks get-credentials --name ${{ env.clusterName }} --resource-group cilium-ci

      - name: Create gcloud-free kubeconfig and load it in configmap
        run: |
          .github/get-kubeconfig.sh
          kubectl create configmap cilium-cli-kubeconfig -n kube-system --from-file kubeconfig

      - name: Load test script in configmap
        run: |
          kubectl create configmap cilium-cli-test-script -n kube-system --from-file .github/in-cluster-test-script.sh

      - name: Create cilium-cli job
        run: |
          helm install .github/cilium-cli-test-job-chart --generate-name \
          --set tag=${{ steps.vars.outputs.sha }} \
          --set cluster_name=${{ env.clusterName }} \
          --set cluster_cidr=${{ steps.vars.outputs.cluster_cidr }}

      - name: Wait for job
        run: |
          kubectl -n kube-system wait job/cilium-cli --for=condition=complete --timeout=10m

      - name: Install cilium
        run: |
          cilium install --cluster-name ${{ env.clusterName }} --azure-resource-group cilium-ci --azure-tenant-id ${{ secrets.AZURE_TENANT_ID}} --azure-client-id ${{ secrets.AZURE_CLIENT_ID }} --azure-client-secret ${{ secrets.AZURE_CLIENT_SECRET }} --config monitor-aggregation=none

      - name: Enable relay
        run: |
          cilium hubble enable

      - name: Status
        run: |
          cilium status --wait

      - name: Relay Port Forward
        run: |
          cilium hubble port-forward&
          sleep 5s

      - name: Connectivity Test
        run: |
          cilium connectivity test

      - name: Cleanup
        if: ${{ always() }}
        run: |
          cilium status
          kubectl get pods --all-namespaces -o wide
          curl -sLO https://github.com/cilium/cilium-sysdump/releases/latest/download/cilium-sysdump.zip
          python cilium-sysdump.zip --output cilium-sysdump-out
          az aks delete --yes --name ${{ env.clusterName }} --resource-group cilium-ci
        shell: bash {0}

      - name: Upload Artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cilium-sysdump-out.zip
          path: cilium-sysdump-out.zip
          retention-days: 5
